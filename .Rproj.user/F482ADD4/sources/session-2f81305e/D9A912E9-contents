### Illustrates loops, which execute a sequence of commands many times

# Two common looping structures:

#  (1) FOR loops: execute a set of commands a fixed number of times. They are controlled by 
#      a loop counter or index that is incremented after each cycle. 

#  (2) WHILE loops: these execute a set of commands until a logical condition is reached. 
#      The condition is tested at the start of the loop. 

 for (i in 1:5) {     # commands in brackets { } are executed some number of times (here, 5 times)
      print(i)        # i or some other variable is the loop counter or index that tracks each cycle
 }

 for (ind in 1:5) { 
      print(1:ind) 
 }

### Define values with objects

# It's often useful to define loop counters and other programming values as objects 
# This way if you wish to  use different values you need only to change the value where you've 
# defined it rather than changing it everywhere you reference it in a script

 n.runs <- 5            # define n.runs as the loop counter and assign it a value

 for (i in 1:n.runs) {  # execute the commands between the brackets {} 5 times
      print(i)          # print the value of the loop index
  }                     # close the loop

 n.runs <- 500          # replace 5 with 500 in line above to execute the loop 500 times

### Example: Project abundance through time with a geometric growth model

 nYears <- 50            # number of years for projection
 lambda <- 1.05          # growth rate
 N      <- rep(0,nYears) # create a vector to hold projected values and fill with zeroes
 N[1]   <- 2             # assign starting value of N to the first values in the vector, year 1
 N                       # check the initial values in the vector

 for (t in 1:nYears)
    { 
      N[t+1] <- N[t] * lambda   # compute N for next time interval
      print(N[t+1])             # print the value to the console
    }

 plot(1:(nYears+1), N)          # project N as a scatterplot using the plot() function
 plot(1:(nYears+1), log(N))     # plot projection of ln(N)
