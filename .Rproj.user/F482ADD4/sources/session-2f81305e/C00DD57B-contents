### Arithmetic operations on vectors

## A useful cheat sheet to basic R: http://datasciencefree.com/basicR.pdf

# Consider setting the location of your working directory

setwd("C:/Users/Bob/Box Sync/Classes/RNR621/R_illustrations")

options(digits = 4) # controls the number of significant digits printed

# Create a vector, x

x <- c(17, 18, 19, 20, 21, 22)
x
	
# Add, subtract, multiply, or divide a vector with a scalar (constant)
# Operation is performed on each value in the vector

x + 5
x - 3
x * 2
x / 2

# Works identically when the constant is produced with a function

x + mean(x)
x - sd(x)
x * mean(x)
x / sd(x)

# Create a second vector of the same size, y

y <- c(11, 12, 13, 14, 15, 16)

length(y)              # number of items in the vector

length(x) == length(y) # compare sizes
                       # two equal signs == is the 'equal to' operator
                       # one equal sign = is an assignment operator, similar to <- 

x ; y     # print values to the console
x + y     # add two vectors
x - y     # subtract two vectors
y - x
x * y     # multiply two vectors 
x / y     # divide two vectors 

# Create a vector of 3 values then append it to x

new <- c(23, 24, 25)
x   <- append(x, new)

# Now x and y have different numbers of values

length(x) ; length(y)
length(x) == length(y)

y + x     # R issues a warning but completes the operation by 
          # recycling the values in smaller vector

# Add more values (overwrites existing object new)

new <- c(26, 27, 28)
x   <- append(x, new)

# sizes of x and y are now multiples of each other
# %% is the modulo function -- returns the remainder when dividing 
#  the first number by the second 

length(x) %% length(y)  
length(x) ; length(y)
length(x) == length(y)

y + x   # recycles values, but no warning issued when exact multiple (i.e., modulo = 0)
